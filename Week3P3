package AdvJava.week3;

import java.sql.*;

public class P3MoviesDB {

    private static final String DB_URL = "jdbc:mysql://localhost:3306/dbName", USER = "root", PASS = "";

    public static void main(String[] args) {
        try (Connection conn = DriverManager.getConnection(DB_URL, USER, PASS);
             Statement stmt = conn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_UPDATABLE)) {

            // Create Movies table and insert sample data
            String createTableSQL = "CREATE TABLE IF NOT EXISTS Movies (ID INT PRIMARY KEY, Movie_Name VARCHAR(100), Genre VARCHAR(50), IMDB_Rating FLOAT, Year INT)";
            stmt.executeUpdate(createTableSQL);
            String insertDataSQL = "INSERT INTO Movies (ID, Movie_Name, Genre, IMDB_Rating, Year) VALUES " +
                    "(1, 'Inception', 'Sci-Fi', 8.8, 2010), " +
                    "(2, 'Orphan', 'Mystery', 7.0, 2009), " +
                    "(3, 'Interstellar', 'Sci-Fi', 8.6, 2014), " +
                    "(4, 'La La Land', 'Musical', 8.0, 2016), " +
                    "(5, 'Gifted', 'Drama', 7.6, 2017)";
            stmt.executeUpdate(insertDataSQL);

            // i. Display all movies
            ResultSet rs = stmt.executeQuery("SELECT * FROM Movies");
            printResultSet(rs);

            // ii. Display 5th movie
            if (rs.absolute(5)) {
                System.out.println("\n5th Movie: " + rs.getString("Movie_Name") + ", " + rs.getFloat("IMDB_Rating"));
            }

            // iii. Insert a new movie
            String insertSQL = "INSERT INTO Movies (ID, Movie_Name, Genre, IMDB_Rating, Year) VALUES (?, ?, ?, ?, ?)";
            try (PreparedStatement pStmt = conn.prepareStatement(insertSQL)) {
                pStmt.setInt(1, 6);
                pStmt.setString(2, "Morning Glory");
                pStmt.setString(3, "Rom-Com");
                pStmt.setFloat(4, 6.5f);
                pStmt.setInt(5, 2010);
                pStmt.executeUpdate();
            }

            // Display all movies after insertion
            rs = stmt.executeQuery("SELECT * FROM Movies");
            printResultSet(rs);

        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    private static void printResultSet(ResultSet rs) throws SQLException {
        System.out.println("\nID\tMovie_Name\tGenre\tIMDB_Rating\tYear");
        while (rs.next()) {
            System.out.printf("%d\t%s\t%s\t%.1f\t%d\n", rs.getInt("ID"), rs.getString("Movie_Name"),
                    rs.getString("Genre"), rs.getFloat("IMDB_Rating"), rs.getInt("Year"));
        }
    }
}
